---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: ec2
lint:
  name: yamllint
  options:
    config-file: .yamllint
platforms:
  - name: test-aws-centos7-solr-hybris-config
    image: ami-9887c6e7
    instance_type: m5.large
    profile_name: epmldi-instance-profile
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    spot_price: 0.04
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: centos
    groups:
      - rhel_family
      - s3

  - name: test-aws-ubuntu16-solr-hybris-config
    image: ami-09677e0a6b14905b0
    instance_type: m5.large
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    security_group_name:
      - default
    spot_price: 0.04
    wait_timeout: 1800
    ssh_user: ubuntu
    groups:
      - debian_family
      - web

  - name: test-aws-ubuntu18-solr-hybris-config
    image: ami-012fd5eb46f56731f
    instance_type: m5.large
    profile_name: epmldi-instance-profile
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    security_group_name:
      - default
    spot_price: 0.04
    wait_timeout: 1800
    ssh_user: ubuntu
    groups:
      - debian_family
      - s3

  - name: test-aws-Debian9-solr-hybris-config
    image: ami-003f19e0e687de1cd
    instance_type: m5.large
    region: us-east-1
    vpc_subnet_id: subnet-05a2ef2b767afec50
    assign_public_ip: False
    spot_price: 0.04
    security_group_name:
      - default
    wait_timeout: 1800
    ssh_user: admin
    groups:
      - debian_family
      - web

provisioner:
  name: ansible
  log: False
  inventory:
    group_vars:
      s3:
        transport: s3
        transport_s3_bucket: hybrisartifacts
        transport_s3_path: /static/solr-hybris
      web:
        transport: web
        transport_web: '{{ lookup("env","STORAGE_AWS") }}/hybris-solr'
  playbooks:
    create: ../resources/provisioning/AWS/create.yml
    prepare: ../resources/provisioning/AWS/prepare.yml
    destroy: ../resources/provisioning/AWS/destroy.yml
  lint:
    name: ansible-lint
  env:
    ANSIBLE_LIBRARY: ${ANSIBLE_LIBRARY}
scenario:
  name: cloud-aws-direct
  test_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
    - converge
#    - idempotence
    - side_effect
    - verify
    - destroy
verifier:
  name: testinfra
  options:
    verbose: true
  directory: ../resources/tests/
  lint:
    name: flake8
